MACHINES = {
  :inetRouter => {
    :box_name => "generic/ubuntu2204",
    :vm_name => "inetRouter",
    :net => [   
                #ip, adpter, netmask, virtualbox__intnet
                ["192.168.255.1", 2, "255.255.255.248",  "router-net"], 
                ["192.168.50.10", 8, "255.255.255.0",    "ansible-net"],
            ]
  },

  :inetRouter2 => {
    :box_name => "generic/ubuntu2204",
    :vm_name => "inetRouter2",
    :net => [   
                #ip, adpter, netmask, virtualbox__intnet
                ["192.168.255.2", 2, "255.255.255.248",  "router-net"],
                ["192.168.255.9", 3, "255.255.255.252",  "router-net2"],
                ["192.168.50.11", 8, "255.255.255.0",    "ansible-net"],
            ]
  },

  :centralRouter => {
    :box_name => "generic/ubuntu2204",
    :vm_name => "centralRouter",
    :net => [
                ["192.168.255.3",  2, "255.255.255.248",  "router-net"],
                ["192.168.255.9",  3, "255.255.255.252",  "router-net2"],
                ["192.168.50.12",  8, "255.255.255.0",    "ansible-net"],
            ]
  },

  :centralServer => {
    :box_name => "generic/ubuntu2204",
    :vm_name => "centralServer",
    :net => [
                ["192.168.0.2",    2, "255.255.255.240",  "central-net"],
                ["192.168.255.10", 3, "255.255.255.252",  "router-net2"],
                ["192.168.50.13",  8, "255.255.255.0",    "ansible-net"],
            ]
  }
}

Vagrant.configure("2") do |config|
  MACHINES.each do |boxname, boxconfig|
    config.vm.define boxname do |box|
      box.vm.box = boxconfig[:box_name]
      box.vm.host_name = boxconfig[:vm_name]
      
      box.vm.provider "virtualbox" do |v|
        v.memory = 768
        v.cpus = 1
       end

      boxconfig[:net].each do |ipconf|
        box.vm.network("private_network", ip: ipconf[0], adapter: ipconf[1], netmask: ipconf[2], virtualbox__intnet: ipconf[3])
      end

      if boxconfig.key?(:public)
        box.vm.network "public_network", boxconfig[:public]
      end

      box.vm.provision "shell", inline: <<-SHELL
        mkdir -p ~root/.ssh
        cp ~vagrant/.ssh/auth* ~root/.ssh
      SHELL
    end
end

  ## Ansible (management) 192.168.50.250
	# Отключаем сетевую папку (ошибка rsync)
  #  config.vm.synced_folder ".", "/vagrant", disabled: true

    config.vm.define "ansible" do |ansible|
		ansible.vm.box = "generic/ubuntu2204"
		ansible.vm.network "private_network", ip: "192.168.50.250",
							virtualbox__intnet: "ansible-net"
		ansible.vm.hostname = "ansible"

		ansible.vm.provider "virtualbox" do |vb|
			vb.memory = "768"
			#vb.customize ["modifyvm", :id, "--natdnshostresolver1", "on"]
		end
		## Когда срабатывает, когда - нет ¯\_(ツ)_/¯
    # Прокидываем playbook и сопутствующее
		# ansible.vm.provision "file", source: "ansible", destination: "ansible"
		ansible.vm.synced_folder "g:\\OTUS\\dz20\\", "/vagrant", disabled: false			

		ansible.vm.provision "shell", inline: <<-SHELL
		sudo sed -i 's/PasswordAuthentication no/PasswordAuthentication yes/g' /etc/ssh/sshd_config    
		sudo systemctl restart sshd.service
		# Ansible install
		sudo apt-get install python3 -y && apt-get install ansible -y
		SHELL
		
		
	end
end

