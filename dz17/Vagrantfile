# -*- mode: ruby -*-
# vi: set ft=ruby :
Vagrant.configure(2) do |config|
	config.vm.box = "centos/7"
	config.vm.box_version = "2004.01"

    # Отключаем сетевую папку
    config.vm.synced_folder ".", "/vagrant", disabled: true

	config.vm.provider "virtualbox" do |v|
	v.memory = 512
	v.cpus = 1
	end

    ## Backup server
    config.vm.define "backup" do |backup|
		backup.vm.network "private_network", ip: "192.168.11.160",
		virtualbox__intnet: "net1"
		backup.vm.hostname = "backup"
		backup.vm.provider "virtualbox" do |backup_vb|
            # Создаем диск на 2Гб
			backup_vb.customize ["createhd",  "--filename", "backup_data", "--size", "2048"]
            # Создаем контроллер
			backup_vb.customize ["storagectl", :id, "--name", "SATA Controller", "--add", "sata"]
            # Подключаем созданный диск к контроллеру
			backup_vb.customize ["storageattach", :id, "--storagectl", "SATA Controller", "--port", "1", "--type", "hdd", "--medium", "backup_data.vdi"]
		backup.vm.provision "shell", inline: <<-SHELL
		sudo sed -i 's/PasswordAuthentication no/PasswordAuthentication yes/g' /etc/ssh/sshd_config    
		sudo systemctl restart sshd.service
		SHELL
		end
	end

    ## Backup client
	config.vm.define "client" do |client|
		client.vm.network "private_network", ip: "192.168.11.150",
		virtualbox__intnet: "net1"
		client.vm.hostname = "client"
		client.vm.provision "shell", inline: <<-SHELL
		sudo sed -i 's/PasswordAuthentication no/PasswordAuthentication yes/g' /etc/ssh/sshd_config    
		sudo systemctl restart sshd.service
		SHELL
	end

    ## Ansible (management)
    config.vm.define "ansible" do |ansible|
		ansible.vm.network "private_network", ip: "192.168.11.100",
		virtualbox__intnet: "net1"
		ansible.vm.hostname = "ansible"
		ansible.vm.provision "shell", inline: <<-SHELL
		sudo sed -i 's/PasswordAuthentication no/PasswordAuthentication yes/g' /etc/ssh/sshd_config    
		sudo systemctl restart sshd.service
        # Ansible install
        sudo yum install python3 -y && yum install epel-release -y && yum install ansible -y
		SHELL
        ansible.vm.provision "file", source: "inventories", destination: "inventories"
        ansible.vm.provision "file", source: "playbooks", destination: "playbooks"
	end	
end    