### Loki

- name: Check if the archive file exists
  ansible.builtin.stat:
    path: "/opt/loki-linux-amd64.zip"
  register: file_stat

- name: Download loki
  ansible.builtin.get_url:
    url: https://github.com/grafana/loki/releases/download/v2.9.8/loki-linux-amd64.zip
    dest: /opt/loki-linux-amd64.zip
  when: not file_stat.stat.exists

- name: Extract an archive
  ansible.builtin.unarchive:
    src: /opt/loki-linux-amd64.zip
    dest: /usr/local/bin
    extra_opts: ["-o"]  # Optional: overwrite existing files
    mode: '0555'  # Optional: set mode of extracted files
    remote_src: yes

- name: Copy loki config
  template:
    src: loki-local-config
    dest: /opt/loki-local-config.yaml


- name: Copy loki.service (unit for systemd) to /etc/systemd/system folder
  template:
    src: loki.service
    dest: /etc/systemd/system


- name: Load loki unit and start it
  systemd:
    name: loki
    state: started
    daemon_reload: true
    enabled: true 


## Grafana

- name: Install musl
  apt:
    name: musl 

# - name: Copy grafana deb package from local
#   template:
#     src: grafana-enterprise_11.0.0_amd64.deb
#     dest: /opt

- name: Install Grafana
  apt:
    deb: /vagrant/grafana-enterprise_11.0.0_amd64.deb

- name: Extract grafana.db 
  ansible.builtin.unarchive:
    src: '{{ grafanadb }}'
    dest: /var/lib/grafana/
    extra_opts: ["-o"]  # Optional: overwrite existing files
    mode: '0640'  # Optional: set mode of extracted files
    owner: grafana
    group: grafana
    remote_src: yes
  notify: service grafana restart



# - name: Make sure a grafana-server is running
#   systemd:
#     name: grafana-server
#     state: started
#     daemon_reload: true
#     enabled: true  