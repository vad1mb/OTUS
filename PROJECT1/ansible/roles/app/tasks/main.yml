# Установка Apache и необходимых пакетов
- name: Install sofware packages for APP 
  apt:
    name:
     - apache2 
     - libapache2-mod-php 
     - php-gd 
     - php-mysql 
     - php-curl 
     - php-mbstring 
     - php-intl 
     - php-gmp 
     - php-bcmath 
     - php-xml 
     - php-imagick 
     - php-zip
    state: present

- name: Ensure directory exists {{ nc_data_files }}
  ansible.builtin.file:
    path: "{{ nc_data_files }}"
    state: directory
    mode: '0755'    

# # Распаковка файловой части Nextcloud
# - name: Unpack the archive into the destination directory
#   ansible.builtin.unarchive:
#     src: "{{ remote_archive_path }}"
#     dest: "{{ nc_data_files }}"
#     # extra_opts:
#     #   - '--exclude=*.txt' # Пример исключения всех .txt файлов, подходит для tar, по умолчанию ничего исключать не нужно
#     # remote_src: true

# Настройка конфигурации
- name: Copy Nextcloud config for Apache
  template:
    src: apache_nextcloud.conf.j2
    dest: /etc/apache2/sites-available/nextcloud.conf
    owner: root
    group: root
    mode: '0644'
  notify:  
    - Reload Apache

- name: Copy Nextcloud config.php
  template:
    src: config.php.j2
    dest: /opt/nextcloud_config.php
    owner: www-data
    group: www-data
    mode: '0770'
  notify:  
    - Reload Apache

# - name: Create a symbolic link to a file config.php (разные для разных APP)
#   file:
#     src: /opt/nextcloud_config.php
#     dest: "{{ nc_data_files }}/nextcloud/config/config.php"
#     state: link
# #    remote_src: true
#   when: not file_info.stat.exists  

- name: Copy config.php file to the desired location
  ansible.builtin.copy:
    src: /opt/nextcloud_config.php
    dest: /data/nextcloud/config/config.php
    remote_src: true

# Включение необходимых модулей
- name: Enable Apache modules
  apache2_module:
    state: present
    name: "{{ item }}"
  with_items:
    - rewrite
    - headers
    - env
    - dir
    - mime
  notify:  
    - Reload Apache    

- name: Check if nextcloud.conf is already enabled
  stat:
    path: /etc/apache2/sites-enabled/nextcloud.conf
  register: nextcloud_conf

- name: Activate nextcloud site configuration if not already enabled
  command: a2ensite nextcloud.conf
  when: not nextcloud_conf.stat.exists

- name: Reload Apache if the configuration was changed
  service:
    name: apache2
    state: reloaded
  notify:
    - Reload Apache
  when: not nextcloud_conf.stat.exists

