# -*- mode: ruby -*-
# vi: set ft=ruby :
# export VAGRANT_EXPERIMENTAL="disks"

Vagrant.configure("2") do |config|

	## PXE Server
	config.vm.define "pxeserver" do |server|
	  server.vm.box = 'bento/centos-8.4'
	  # server.vm.disk :disk, size: "15GB", name: "extra_storage1"
	
	  server.vm.host_name = 'pxeserver'
	  server.vm.network :private_network, 
						 ip: "10.0.0.20", 
						 virtualbox__intnet: 'pxenet'
	#   server.vm.network :private_network, 		# For ansible 
	# 					 ip: "192.168.50.10", 	
	# 					 adapter: 3						 
	
	  server.vm.network "forwarded_port", guest: 80, host: 8081
	
	  server.vm.provider "virtualbox" do |vb|
		vb.memory = "1024"
		vb.customize ["modifyvm", :id, "--natdnshostresolver1", "on"]
	  end
	
	  # ENABLE to setup PXE
	  server.vm.provision "shell",
		name: "Setup PXE server",
		path: "setup_pxe.sh"
	end
	
	  ## PXE Client
	# config used from this
	# https://github.com/eoli3n/vagrant-pxe/blob/master/client/Vagrantfile
	config.vm.define "pxeclient" do |pxeclient|
		pxeclient.vm.box = "bento/centos-8.4"
		pxeclient.vm.host_name = "pxeclient"
		pxeclient.vm.network :private_network, ip: "10.0.0.21"
		pxeclient.vm.provider :virtualbox do |vb|
		  vb.memory = "2048"
		  vb.customize ["modifyvm", :id, "--natdnshostresolver1", "on"]
		  vb.customize [
			  'modifyvm', :id,
			  '--nic1', 'intnet',
			  '--intnet1', 'pxenet',
			  '--nic2', 'nat',
			  '--boot1', 'net',
			  '--boot2', 'none',
			  '--boot3', 'none',
			  '--boot4', 'none'
			]
		vb.customize ["modifyvm", :id, "--natdnshostresolver1", "on"]
		end
		  # ENABLE to fix memory issues
	#     end
	end

	## ANSIBLE on Centos 192.168.50.100
	#   config.vm.define "ansible" do |ansible|
	# 	ansible.vm.box = 'centos/7'
	# 	ansible.vm.host_name = 'ansible'
	# 	ansible.vm.network :private_network, 
	# 						ip: "192.168.50.100", adapter: 2
		
	# 	ansible.vm.provider "virtualbox" do |vb|
	# 	  vb.memory = "512"
	# 	  vb.customize ["modifyvm", :id, "--natdnshostresolver1", "on"]
		
	# 	  # Cетевая папка - заработала при явном указании g:\\OTUS\\dz18\\
	# 	ansible.vm.synced_folder "g:\\OTUS\\dz18\\", "/vagrant", disabled: false

	# 	ansible.vm.provision "shell", run: "always", inline: <<-SHELL
	# 	sed -i 's/mirrorlist/#mirrorlist/g' /etc/yum.repos.d/CentOS-*
	# 	sed -i 's|#baseurl=http://mirror.centos.org|baseurl=http://vault.centos.org|g' /etc/yum.repos.d/CentOS-*
	# 	sudo dnf update libmodulemd -y &&
	# 	sudo yum install python3 -y &&
	# 	sudo yum install epel-release -y &&
	# 	#sudo yum install --skip-broken ansible -y &&
	# 	sudo yum install ansible -y &&
	# 	sudo yum install nano -y
	# 	SHELL
	# 	end
	#   end

    ## Ansible (management) 192.168.50.100
	# Отключаем сетевую папку (ошибка rsync)
    config.vm.synced_folder ".", "/vagrant", disabled: true

    config.vm.define "ansible" do |ansible|
		ansible.vm.box = "centos/7"
		ansible.vm.box_version = "2004.01"
		ansible.vm.network "private_network", ip: "10.0.0.250",
							virtualbox__intnet: "net1"
		ansible.vm.hostname = "ansible"

		ansible.vm.provider "virtualbox" do |vb|
			vb.memory = "512"
			vb.customize ["modifyvm", :id, "--natdnshostresolver1", "on"]
		end
	#	ansible.vm.synced_folder "g:\\OTUS\\dz18\\", "/vagrant", disabled: false			

		ansible.vm.provision "shell", inline: <<-SHELL
		sudo sed -i 's/PasswordAuthentication no/PasswordAuthentication yes/g' /etc/ssh/sshd_config    
		sudo systemctl restart sshd.service
		# Ansible install
		sudo yum install python3 -y && yum install epel-release -y && yum install ansible -y
		SHELL
		
		# Прокидываем playbook и сопутствующее
		ansible.vm.provision "file", source: "ansible", destination: "ansible"
		# Подкладываем ранее скачанный ISO
		# ansible.vm.provision "file", source: "CentOS-8.4.2105-x86_64-dvd1.iso", destination: "CentOS-8.4.2105-x86_64-dvd1.iso"	
	end
end	